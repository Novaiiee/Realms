generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Post {
  id        String   @id @unique @default(cuid())
  title     String
  content   String?
  votes     Int
  userId    String
  realmId   String
  createdAt DateTime @default(now())
  realm     Realm    @relation(fields: [realmId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Realm {
  id          String   @id @default(cuid())
  name        String   @unique
  description String
  ownerId     String   @unique
  createdAt   DateTime @default(now())

  posts   Post[]
  members User[]
}

model User {
  id            String    @id @default(cuid())
  name          String?   @unique
  email         String?   @unique
  image         String?
  emailVerified DateTime?
  accounts      Account[]
  posts         Post[]
  sessions      Session[]
  realms        Realm[]
}

model VerificationToken {
  identifier String   @unique
  token      String   @unique
  expires    DateTime
}
